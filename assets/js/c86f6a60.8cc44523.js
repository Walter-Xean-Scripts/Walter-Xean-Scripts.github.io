"use strict";(self.webpackChunkwxdocs=self.webpackChunkwxdocs||[]).push([[1667],{5708:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=t(5893),s=t(1151);const i={},c=void 0,r={id:"Core/Modules/Scenes/Scenes",title:"Scenes",description:"The library for easily playing synchronized scenes.",source:"@site/docs/Core/Modules/Scenes/Scenes.md",sourceDirName:"Core/Modules/Scenes",slug:"/Core/Modules/Scenes/",permalink:"/docs/Core/Modules/Scenes/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Vehicles",permalink:"/docs/Core/Modules/Pools/Vehicles"},next:{title:"Create",permalink:"/docs/Core/Modules/Scenes/Create"}},a={},l=[{value:"How does it work?",id:"how-does-it-work",level:2},{value:"1. Finding a scene you want to play",id:"1-finding-a-scene-you-want-to-play",level:2},{value:"2. Getting the scene output",id:"2-getting-the-scene-output",level:2},{value:"3. Constructing the scene",id:"3-constructing-the-scene",level:2},{value:"Functions on the SceneHandler",id:"functions-on-the-scenehandler",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The library for easily playing synchronized scenes."}),"\n",(0,o.jsx)(n.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,o.jsxs)(n.p,{children:["We've taken the list from ",(0,o.jsx)(n.a,{href:"https://www.gta5-mods.com/tools/updated-animation-list-for-scene-director",children:"here"})," and made a script that can format it and play it in FiveM. This does require you to run a powershell script that gives you the output you need to play your scene, but we've included that in our repo too. Let me explain."]}),"\n",(0,o.jsx)(n.h2,{id:"1-finding-a-scene-you-want-to-play",children:"1. Finding a scene you want to play"}),"\n",(0,o.jsxs)(n.p,{children:["First navigate to the ",(0,o.jsx)(n.code,{children:"scene_creator"})," folder in our repo, then you'll see a file called ",(0,o.jsx)(n.code,{children:"SceneDirectorSynchedAnim.xml"}),".\nOpen it and browse the synchronized scenes that are available. You can also use the search function in your text editor to find a specific scene.\nOnce you've found one, copy the name of the scene (It'll look somewhat like this: ",(0,o.jsx)(n.code,{children:"Store hold up cash"}),")!\nNow you're ready to run the script."]}),"\n",(0,o.jsx)(n.h2,{id:"2-getting-the-scene-output",children:"2. Getting the scene output"}),"\n",(0,o.jsxs)(n.p,{children:["This part is really simple thanks to our powershell script, made with \u2764\ufe0f by ",(0,o.jsx)(n.a,{href:"https://github.com/Sh4dow8080",children:"Sh4dow"}),".\nJust open a terminal in the ",(0,o.jsx)(n.code,{children:"scene_creator"})," folder and run the following command (With the name of the scene you copied earlier):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'./program.ps1 "Store hold up cash"\n'})}),"\n",(0,o.jsx)(n.p,{children:"That'll give you an output copied to your clipboard, that looks something like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"{\n    ['title'] = 'Store hold up cash',\n    ['actorsAligned'] = true,\n    ['deltaZ'] = 0,\n    ['actorAnims'] = {\n        {\n            ['id'] = 13107,\n            ['dir'] = 'mp_am_hold_up',\n            ['name'] = 'holdup_victim_20s',\n            ['animIndex'] = 24133\n        },\n    },\n    ['objectAnims'] = {\n        {\n            ['id'] = 13108,\n            ['dir'] = 'mp_am_hold_up',\n            ['name'] = 'holdup_victim_20s_bag',\n            ['animIndex'] = 21566\n        },\n        {\n            ['id'] = 13109,\n            ['dir'] = 'mp_am_hold_up',\n            ['name'] = 'holdup_victim_20s_till',\n            ['animIndex'] = 24133\n        },\n    },\n    ['objects'] = {\n        `p_poly_bag_01_s`,\n        `p_till_01_s`,\n    },\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"3-constructing-the-scene",children:"3. Constructing the scene"}),"\n",(0,o.jsx)(n.p,{children:"Constructing the scene now is really simple, all you'll have to do, is call upon the scenes library like so:\n(Where scene data is what you just got from the powershell script!)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"local Scenes = WXSCore.Scenes\n\nlocal sceneHandler = Scenes:Create(sceneData, sceneLocation, sceneRotation, actors, looped, useDelaZ, addCamera, manualSpawn)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"functions-on-the-scenehandler",children:"Functions on the SceneHandler"})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var o=t(7294);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);